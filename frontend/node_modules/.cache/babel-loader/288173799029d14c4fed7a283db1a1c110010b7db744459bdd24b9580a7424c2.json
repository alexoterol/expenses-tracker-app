{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexo\\\\OneDrive - Escuela Superior Polit\\xE9cnica del Litoral\\\\BUSINESS\\\\Practica\\\\expenses-tracker-app-complete\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const addIncome = async income => {\n    const response = await axios.post(`${BASE_URL}add-income`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getIncomes();\n  };\n  const getIncomes = async () => {\n    const response = await axios.get(`${BASE_URL}get-incomes`);\n    setIncomes(response.data);\n    console.log(response.data);\n  };\n  const deleteIncome = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\n    getIncomes();\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n  const addExpense = async expense => {\n    const response = await axios.post(`${BASE_URL}add-expense`, expense).catch(err => {\n      setError(err.response.data.message);\n    });\n    getExpenses();\n  };\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}get-expenses`);\n    setExpenses(response.data);\n    console.log(response.data);\n  };\n  const deleteExpense = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\n    getExpenses();\n  };\n  const totalExpenses = () => {\n    let totalExpenses = 0;\n    expenses.forEach(expense => {\n      totalExpenses = totalExpenses + expense.amount;\n    });\n    return totalExpenses;\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history.slice(0, 5);\n  };\n  const incomeHistory = () => {\n    const history = [...incomes];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history;\n  };\n  const expenseHistory = () => {\n    const history = [...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history;\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      setError,\n      totalBalance,\n      transactionHistory,\n      error,\n      incomeHistory,\n      expenseHistory\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","children","_s","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","response","post","catch","err","data","message","getIncomes","get","console","log","deleteIncome","id","res","delete","totalIncome","forEach","amount","addExpense","expense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","incomeHistory","expenseHistory","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["C:/Users/alexo/OneDrive - Escuela Superior PolitÃ©cnica del Litoral/BUSINESS/Practica/expenses-tracker-app-complete/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n\r\n    const [incomes, setIncomes] = useState([])\r\n    const [expenses, setExpenses] = useState([])\r\n    const [error, setError] = useState(null)\r\n    \r\n    const addIncome = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-income`, income)\r\n            .catch((err) => {\r\n                setError(err.response.data.message)\r\n        })\r\n        getIncomes();\r\n    }\r\n\r\n    const getIncomes = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-incomes`);\r\n        setIncomes(response.data);\r\n        console.log(response.data);\r\n    }\r\n\r\n    const deleteIncome = async (id) => {\r\n        const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\r\n        getIncomes();\r\n    }\r\n\r\n    const totalIncome = () => {\r\n        let totalIncome = 0;\r\n        incomes.forEach((income) => {\r\n            totalIncome = totalIncome + income.amount\r\n        })\r\n        return totalIncome;\r\n    }\r\n\r\n    const addExpense = async (expense) => {\r\n        const response = await axios.post(`${BASE_URL}add-expense`, expense)\r\n            .catch((err) => {\r\n                setError(err.response.data.message)\r\n        })\r\n        getExpenses();\r\n    }\r\n\r\n    const getExpenses = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-expenses`);\r\n        setExpenses(response.data);\r\n        console.log(response.data);\r\n    }\r\n\r\n    const deleteExpense = async (id) => {\r\n        const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\r\n        getExpenses();\r\n    }\r\n\r\n    const totalExpenses = () => {\r\n        let totalExpenses = 0;\r\n        expenses.forEach((expense) => {\r\n            totalExpenses = totalExpenses + expense.amount\r\n        })\r\n        return totalExpenses;\r\n    }\r\n\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses()\r\n    }\r\n\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses]\r\n        history.sort((a, b) => {\r\n            return new Date(b.createdAt) - new Date(a.createdAt)\r\n        })\r\n\r\n        return history.slice(0, 5)\r\n    }\r\n\r\n    const incomeHistory = () => {\r\n        const history = [...incomes]\r\n        history.sort((a, b) => {\r\n            return new Date(b.createdAt) - new Date(a.createdAt)\r\n        })\r\n\r\n        return history\r\n    }\r\n\r\n    const expenseHistory = () => {\r\n        const history = [...expenses]\r\n        history.sort((a, b) => {\r\n            return new Date(b.createdAt) - new Date(a.createdAt)\r\n        })\r\n\r\n        return history\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            setError,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            incomeHistory,\r\n            expenseHistory\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(GlobalContext);\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}